const e=JSON.parse(`{"key":"v-3066d742","path":"/posts/git-rebase-toturial.html","title":"What is git rebase","lang":"zh-CN","frontmatter":{"comments":true,"title":"What is git rebase","date":"2018-01-18T15:05:27.000Z","slug":"git-rebase","category":["技术"],"tag":["git"],"description":"一直以为git rebase是一个非常复杂日常用不到的操作，然而事实并不是这样。git中有两个操作可以进行分支合并，一个是git merge，一个是git rebase。git merge很简单，很容易理解，就是把一个分支合并到另外一个分支，合并完成后会产生一个merge commit。 关于git rebase不是特别直观，先举例说明： //假设我们有一个master分支 //我为了开发feature创建feature分支 git checkout -b feature //进行了一系列的修改和提交 git commit -m 'a' //此时其他同事有提交到master分支，我们完成工作要提交到master git checkout master git pull origin master git checkout feature //feature分支rebase到最新的master的HEAD git rebase master //合并回到master分支 git checkout master git merge feature","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/git-rebase-toturial.html"}],["meta",{"property":"og:site_name","content":"go3k"}],["meta",{"property":"og:title","content":"What is git rebase"}],["meta",{"property":"og:description","content":"一直以为git rebase是一个非常复杂日常用不到的操作，然而事实并不是这样。git中有两个操作可以进行分支合并，一个是git merge，一个是git rebase。git merge很简单，很容易理解，就是把一个分支合并到另外一个分支，合并完成后会产生一个merge commit。 关于git rebase不是特别直观，先举例说明： //假设我们有一个master分支 //我为了开发feature创建feature分支 git checkout -b feature //进行了一系列的修改和提交 git commit -m 'a' //此时其他同事有提交到master分支，我们完成工作要提交到master git checkout master git pull origin master git checkout feature //feature分支rebase到最新的master的HEAD git rebase master //合并回到master分支 git checkout master git merge feature"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T11:14:17.000Z"}],["meta",{"property":"article:author","content":"go3k"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2018-01-18T15:05:27.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T11:14:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is git rebase\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-01-18T15:05:27.000Z\\",\\"dateModified\\":\\"2023-06-10T11:14:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"go3k\\",\\"url\\":\\"https://go3k.github.io/\\"}]}"]]},"headers":[{"level":3,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1686312436000,"updatedTime":1686395657000,"contributors":[{"name":"zhouyue","email":"zhouyue@camel4u.com","commits":2}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"posts/git-rebase-toturial.md","localizedDate":"2018年1月18日","excerpt":"<p>一直以为<code>git rebase</code>是一个非常复杂日常用不到的操作，然而事实并不是这样。git中有两个操作可以进行分支合并，一个是<code>git merge</code>，一个是<code>git rebase</code>。<code>git merge</code>很简单，很容易理解，就是把一个分支合并到另外一个分支，合并完成后会产生一个<code>merge commit</code>。</p>\\n<p>关于<code>git rebase</code>不是特别直观，先举例说明：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>    //假设我们有一个master分支\\n    //我为了开发feature创建feature分支\\n    git checkout -b feature\\n    //进行了一系列的修改和提交\\n    git commit -m 'a'\\n    //此时其他同事有提交到master分支，我们完成工作要提交到master\\n    git checkout master\\n    git pull origin master\\n    git checkout feature\\n    //feature分支rebase到最新的master的HEAD\\n    git rebase master\\n    //合并回到master分支\\n    git checkout master\\n    git merge feature\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
