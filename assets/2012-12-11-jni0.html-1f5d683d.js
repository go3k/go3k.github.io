const t=JSON.parse('{"key":"v-562fe4d4","path":"/posts/2012-12-11-jni0.html","title":"Cocos2d-x中通过JNI进行C++调用Java代码","lang":"zh-CN","frontmatter":{"comments":true,"date":"2012-12-11T00:00:00.000Z","slug":"jni0","title":"Cocos2d-x中通过JNI进行C++调用Java代码","category":["技术"],"tag":["cocos2d","JNI","Android"],"description":"主体思路 通过JNI获取java虚拟机，再获取当前程序的JNI环境，通过JNI环境获取需要调用的java类信息，再获取需要调用的java类中的函数信息。再通过JNI环境调用，使用类信息、函数信息，调用对应的java函数。 看起来好像有点复杂，but不用担心，cocos2d-x中有一个JniHelper类(头文件的copyright为：cocos2d-x.org，是Google提供的还是cocos2d-x小组自己封装的我就不清楚了)，它已经把这些工作封装好了。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/2012-12-11-jni0.html"}],["meta",{"property":"og:site_name","content":"go3k"}],["meta",{"property":"og:title","content":"Cocos2d-x中通过JNI进行C++调用Java代码"}],["meta",{"property":"og:description","content":"主体思路 通过JNI获取java虚拟机，再获取当前程序的JNI环境，通过JNI环境获取需要调用的java类信息，再获取需要调用的java类中的函数信息。再通过JNI环境调用，使用类信息、函数信息，调用对应的java函数。 看起来好像有点复杂，but不用担心，cocos2d-x中有一个JniHelper类(头文件的copyright为：cocos2d-x.org，是Google提供的还是cocos2d-x小组自己封装的我就不清楚了)，它已经把这些工作封装好了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T11:14:17.000Z"}],["meta",{"property":"article:author","content":"go3k"}],["meta",{"property":"article:tag","content":"cocos2d"}],["meta",{"property":"article:tag","content":"JNI"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:published_time","content":"2012-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T11:14:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cocos2d-x中通过JNI进行C++调用Java代码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2012-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-10T11:14:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"go3k\\",\\"url\\":\\"https://go3k.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"java中的类型对应的简写如下：","slug":"java中的类型对应的简写如下","link":"#java中的类型对应的简写如下","children":[{"level":3,"title":"多参数的函数","slug":"多参数的函数","link":"#多参数的函数","children":[]}]},{"level":2,"title":"参数传递","slug":"参数传递","link":"#参数传递","children":[]},{"level":2,"title":"string类型的转换","slug":"string类型的转换","link":"#string类型的转换","children":[]}],"git":{"createdTime":1686312436000,"updatedTime":1686395657000,"contributors":[{"name":"zhouyue","email":"zhouyue@camel4u.com","commits":2}]},"readingTime":{"minutes":7.15,"words":2145},"filePathRelative":"posts/2012-12-11-jni0.md","localizedDate":"2012年12月11日","excerpt":"<h1> 主体思路</h1>\\n<p>通过JNI获取java虚拟机，再获取当前程序的JNI环境，通过JNI环境获取需要调用的java类信息，再获取需要调用的java类中的函数信息。再通过JNI环境调用，使用类信息、函数信息，调用对应的java函数。</p>\\n<p>看起来好像有点复杂，but不用担心，cocos2d-x中有一个JniHelper类(头文件的copyright为：<a href=\\"http://cocos2d-x.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">cocos2d-x.org</a>，是Google提供的还是cocos2d-x小组自己封装的我就不清楚了)，它已经把这些工作封装好了。</p>\\n","autoDesc":true}');export{t as data};
