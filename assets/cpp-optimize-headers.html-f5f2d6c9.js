const e=JSON.parse('{"key":"v-65cb9404","path":"/posts/cpp-optimize-headers.html","title":"C++项目优化头文件包含","lang":"zh-CN","frontmatter":{"date":"2014-07-31T00:00:00.000Z","title":"C++项目优化头文件包含","category":["技术"],"tag":["C++","optimize"],"description":"当一个C++项目越来越庞大，编译时间会慢的让人难受。虽说编译执行的语言在编译阶段都存在类似的问题，但是很多时候错误的编码习惯才是这类问题的根源。 头文件包含问题 如果你的项目随便修改了某个头文件，就造成整个项目大规模的重新编译，那么就需要注意头文件包含问题了。 问题原因是，C/C++中#include是一个预编译关键字，预编译处理时它会将#include后面的文件内容直接复制过来。当include后面的文件有修改，那么当前文件也会被认为有修改，该文件会被重新编译。举例说明： \\t//A.h \\tvoid A_dosth(); \\t//B.h \\t#include \\"A.h\\" \\tvoid B_dosth(); \\t//B.cpp \\t#include \\"B.h\\" \\tvoid B_dosth() \\t{ \\t\\t//...... \\t}","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/cpp-optimize-headers.html"}],["meta",{"property":"og:site_name","content":"go3k"}],["meta",{"property":"og:title","content":"C++项目优化头文件包含"}],["meta",{"property":"og:description","content":"当一个C++项目越来越庞大，编译时间会慢的让人难受。虽说编译执行的语言在编译阶段都存在类似的问题，但是很多时候错误的编码习惯才是这类问题的根源。 头文件包含问题 如果你的项目随便修改了某个头文件，就造成整个项目大规模的重新编译，那么就需要注意头文件包含问题了。 问题原因是，C/C++中#include是一个预编译关键字，预编译处理时它会将#include后面的文件内容直接复制过来。当include后面的文件有修改，那么当前文件也会被认为有修改，该文件会被重新编译。举例说明： \\t//A.h \\tvoid A_dosth(); \\t//B.h \\t#include \\"A.h\\" \\tvoid B_dosth(); \\t//B.cpp \\t#include \\"B.h\\" \\tvoid B_dosth() \\t{ \\t\\t//...... \\t}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T11:14:17.000Z"}],["meta",{"property":"article:author","content":"go3k"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"optimize"}],["meta",{"property":"article:published_time","content":"2014-07-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T11:14:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C++项目优化头文件包含\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2014-07-31T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-10T11:14:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"go3k\\",\\"url\\":\\"https://go3k.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"头文件包含问题","slug":"头文件包含问题","link":"#头文件包含问题","children":[]},{"level":2,"title":"建议编码原则","slug":"建议编码原则","link":"#建议编码原则","children":[]},{"level":2,"title":"自动化工具","slug":"自动化工具","link":"#自动化工具","children":[{"level":3,"title":"Visual Studio 12自带功能","slug":"visual-studio-12自带功能","link":"#visual-studio-12自带功能","children":[]},{"level":3,"title":"C/C++静态分析工具PC-lint","slug":"c-c-静态分析工具pc-lint","link":"#c-c-静态分析工具pc-lint","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1686312436000,"updatedTime":1686395657000,"contributors":[{"name":"zhouyue","email":"zhouyue@camel4u.com","commits":2}]},"readingTime":{"minutes":2.88,"words":865},"filePathRelative":"posts/cpp-optimize-headers.md","localizedDate":"2014年7月31日","excerpt":"<p>当一个C++项目越来越庞大，编译时间会慢的让人难受。虽说编译执行的语言在编译阶段都存在类似的问题，但是很多时候错误的编码习惯才是这类问题的根源。</p>\\n<h2> 头文件包含问题</h2>\\n<p>如果你的项目随便修改了某个头文件，就造成整个项目大规模的重新编译，那么就需要注意头文件包含问题了。</p>\\n<p>问题原因是，C/C++中<code>#include</code>是一个预编译关键字，预编译处理时它会将<code>#include</code>后面的文件内容直接复制过来。当include后面的文件有修改，那么当前文件也会被认为有修改，该文件会被重新编译。举例说明：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>\\t//A.h\\n\\tvoid A_dosth();\\n\\t//B.h\\n\\t#include \\"A.h\\"\\n\\tvoid B_dosth();\\n\\t//B.cpp\\n\\t#include \\"B.h\\"\\n\\tvoid B_dosth()\\n\\t{\\n\\t\\t//......\\n\\t}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
