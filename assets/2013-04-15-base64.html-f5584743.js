import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,d as s,a as t,b as d,f as c}from"./app-c703f97d.js";const o={},i=t("h2",{id:"简介",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),d(" 简介")],-1),l=t("p",null,"Base64是一种基于64个可打印字符来表示二进制数据的表示方法。",-1),n=t("p",null,"常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email，email via MIME, 在XML中存储复杂数据。 URL里传递复杂数据参数时，也会用到Base64。(但不是标准的Base64，详见下文。)",-1),h=t("h2",{id:"编码原理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#编码原理","aria-hidden":"true"},"#"),d(" 编码原理")],-1),p=t("p",null,"原理相当简单，以64个可打印字符为基础，将二进制数据转成这64个字符。",-1),u=c(`<h3 id="_64个字符" tabindex="-1"><a class="header-anchor" href="#_64个字符" aria-hidden="true">#</a> 64个字符</h3><table class="wikitable" style="text-align:center;"><tbody><tr><th scope="col">Value</th><th scope="col">Char</th><td rowspan="18"> </td><th scope="col">Value</th><th scope="col">Char</th><td rowspan="18"> </td><th scope="col">Value</th><th scope="col">Char</th><td rowspan="18"> </td><th scope="col">Value</th><th scope="col">Char</th></tr><tr><td>0</td><td>A</td><td>16</td><td>Q</td><td>32</td><td>g</td><td>48</td><td>w</td></tr><tr><td>1</td><td>B</td><td>17</td><td>R</td><td>33</td><td>h</td><td>49</td><td>x</td></tr><tr><td>2</td><td>C</td><td>18</td><td>S</td><td>34</td><td>i</td><td>50</td><td>y</td></tr><tr><td>3</td><td>D</td><td>19</td><td>T</td><td>35</td><td>j</td><td>51</td><td>z</td></tr><tr><td>4</td><td>E</td><td>20</td><td>U</td><td>36</td><td>k</td><td>52</td><td>0</td></tr><tr><td>5</td><td>F</td><td>21</td><td>V</td><td>37</td><td>l</td><td>53</td><td>1</td></tr><tr><td>6</td><td>G</td><td>22</td><td>W</td><td>38</td><td>m</td><td>54</td><td>2</td></tr><tr><td>7</td><td>H</td><td>23</td><td>X</td><td>39</td><td>n</td><td>55</td><td>3</td></tr><tr><td>8</td><td>I</td><td>24</td><td>Y</td><td>40</td><td>o</td><td>56</td><td>4</td></tr><tr><td>9</td><td>J</td><td>25</td><td>Z</td><td>41</td><td>p</td><td>57</td><td>5</td></tr><tr><td>10</td><td>K</td><td>26</td><td>a</td><td>42</td><td>q</td><td>58</td><td>6</td></tr><tr><td>11</td><td>L</td><td>27</td><td>b</td><td>43</td><td>r</td><td>59</td><td>7</td></tr><tr><td>12</td><td>M</td><td>28</td><td>c</td><td>44</td><td>s</td><td>60</td><td>8</td></tr><tr><td>13</td><td>N</td><td>29</td><td>d</td><td>45</td><td>t</td><td>61</td><td>9</td></tr><tr><td>14</td><td>O</td><td>30</td><td>e</td><td>46</td><td>u</td><td>62</td><td>+</td></tr><tr><td>15</td><td>P</td><td>31</td><td>f</td><td>47</td><td>v</td><td>63</td><td>/</td></tr></tbody></table><blockquote><p>最后两个字符在不同应用场景会有一些变种或改良。</p></blockquote><h3 id="转换方法" tabindex="-1"><a class="header-anchor" href="#转换方法" aria-hidden="true">#</a> 转换方法</h3><p>因为2的6次方等于64，那么以6Bit做为一个Base64单元，表示一个可打印字符。3个字节有24Bit，可以对应4个Base64单元。(3 * 8 = 4 * 6 = 24)转换方法也就是：</p><p>每3个字节为一组，共24Bit；24Bit再分组，6Bit一组，分成4组，每个6Bit组高位补两个0；这样3个字节就转成了Asc值小于64的4个字节。再把这些字符以其值，对应到上面的64个字符。</p><p>如果最后剩下两个输入数据，在编码结果后加1个“=”；如果最后剩下一个输入数据，编码结果后加2个“=”；如果没有剩下任何数据，就什么都不要加，这样才可以保证资料还原的正确性。</p><p>Base64编码规则为：</p><ol><li>把3个字符转成4个字符</li><li>每76个字符加一个换行符</li><li>最后的结束符也要处理</li></ol><p>例如：</p><pre><code>转换前： aaaaaabb ccccdddd eeffffff
转换后： 00aaaaaa 00bbcccc 00ddddee 00ffffff
</code></pre><h2 id="url参数使用base64" tabindex="-1"><a class="header-anchor" href="#url参数使用base64" aria-hidden="true">#</a> URL参数使用Base64</h2><p>RFC 1738中规定：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;…Only alphanumerics [0-9a-zA-Z], the special characters &quot;$-_.+!*&#39;(),&quot;

[not including the quotes - ed], and reserved characters used for their reserved purposes may be used unencoded within a URL.&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>“只有字母和数字[0-9 a-z A-Z]、一些特殊符号“$-<em>.+!*&#39;(),”[不包括双引号]、以及某些保留字，才可以不经过编码直接用于URL。” 可采用一种用于URL的改进Base64编码，它不在末尾填充&#39;=&#39;号，并将标准Base64中的“+”和“/”分别改成了“-”和“</em>”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。</p>`,15);function f(_,b){return a(),r("div",null,[i,l,n,h,p,s(" more "),u])}const v=e(o,[["render",f],["__file","2013-04-15-base64.html.vue"]]);export{v as default};
